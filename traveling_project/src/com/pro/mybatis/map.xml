<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="query_ex">

	<select id="myPlannerSelect" resultType="com.pro.dto.MyPlanner" parameterType="com.pro.dto.MyPlanner">
		SELECT s.stay_name, s.location,
		date_format(r.check_in_date, '%Y.%m.%d') AS check_in_date,
		date_format(r.check_out_date, '%Y.%m.%d') AS check_out_date,
		date_format(p.modified_date, '%Y.%m.%d') AS modified_date,
		(datediff(r.check_out_date, r.check_in_date) + 1) AS days_count,
		p.plan_id FROM planner p
		JOIN reservation r ON p.reservation_id =
		r.reservation_id
		JOIN room_info ro ON r.room_id = ro.room_id
		JOIN
		stay_info s ON ro.stay_id = s.stay_id
		WHERE r.user_id = #{user_id};
	</select>

	<select id="planSelect" resultType="com.pro.dto.DetailPlan" parameterType="com.pro.dto.DetailPlan">
		SELECT * FROM detail_plan WHERE plan_id = #{plan_id} AND
		plan_date = #{check_in_date} ORDER BY plan_start_time, plan_end_time;
	</select>

	<insert id="planInsert" parameterType="com.pro.dto.DetailPlan">
		INSERT INTO detail_plan
		VALUES (#{plan_id}, #{plan_date}, #{plan_start_time},
		#{plan_end_time}, #{plan_content});
	</insert>

	<delete id="planDelete" parameterType="com.pro.dto.DetailPlan">
		DELETE FROM detail_plan
		WHERE plan_id = #{plan_id};
	</delete>

	<update id="planUpdate" parameterType="com.pro.dto.DetailPlan">
		UPDATE planner SET
		modified_date = now() WHERE plan_id = #{plan_id};
	</update>

	<select id="checkInInfoSelect" resultType="com.pro.dto.CheckInInfo" parameterType="com.pro.dto.CheckInInfo">
		SELECT
		hi.host_id AS hostId,
		r.reservation_id AS
		reservationId,
		u.name as userName,
		r.room_id as roomId,
		ro.room_name AS
		roomName,
		r.check_in_date AS checkInDate,
		r.check_out_date AS
		checkOutDate,
		CAST(r.check_in_time as CHAR) AS checkInTime,
		CAST(r.check_out_time as CHAR) AS checkOutTime,
		r.people AS people,
		r.price AS price,
		CAST(r.payment_time AS CHAR) AS paymentTime
		FROM
		reservation r
		JOIN user_info u ON r.user_id = u.user_id
		JOIN room_info
		ro ON r.room_id = ro.room_id
		JOIN stay_info si ON ro.stay_id =
		si.stay_id
		JOIN host_info hi ON si.host_id = hi.host_id
		WHERE hi.host_id
		= #{hostId}
		AND r.check_in_date = curdate()
		AND r.status = '예약 확정';
	</select>

	<insert id="stayInfoInsert" parameterType="com.pro.dto.StayInfo">
		INSERT INTO stay_info(
		host_id, stay_name, location, post_code,
		road_addr,
		jibun_addr,
		detail_addr, reference_addr, latitude, longitude,
		host_phone, image1,
		image2, image3, image4, image5, content,
		tub, bath_supplies,
		hair_dryer,
		towel, bedding, washing_machine, drying_machine,
		pool,
		arcade_game, gym, tv,board_game,
		air_conditioner, fan, heating_system,
		carbon_monoxide_alarm, fire_extinguisher, aid_kit, fire_alarm,
		workspace,wireless_internet,
		barbecue_tool,basic_cookware,
		dining_table, cutlery, refrigerator, microwave, electric_rice_cooker,
		gas_stove_or_induction,
		electric_vehicle_charging_facilities,
		parking,
		breakfast, clean_service, luggage_storage
		)
		VALUES (
		#{hostId},
		#{stayName},
		SUBSTRING_INDEX(#{roadAddr}, ' ', 2),
		#{postCode},
		#{roadAddr}, #{jibunAddr}, #{detailAddr},
		#{referenceAddr},
		#{lat},
		#{lngt}, #{hostPhone}, #{image1}, #{image2},
		#{image3}, #{image4},
		#{image5}, #{content},
		#{tub}, #{bathSupplies},
		#{hairDryer},
		#{towel},
		#{bedding}, #{washingMachine},
		#{dryingMachine},
		#{pool}, #{arcadeGame},
		#{gym}, #{tv},#{boardGame},
		#{airConditioner}, #{fan},
		#{heatingSystem},
		#{carbonMonoxideAlarm},
		#{fireExtinguisher},
		#{aidKit}, #{fireAlarm},
		#{workspace},#{wirelessInternet},
		#{barbecueTool},#{basicCookware},
		#{diningTable}, #{cutlery},
		#{refrigerator}, #{microwave},
		#{electricRiceCooker},
		#{gasStoveOrInduction},
		#{electricVehicleChargingFacilities},
		#{parkingLot},
		#{breakfast},
		#{cleanService}, #{luggageStorage}
		);
	</insert>

	<select id="stayIdCount" resultType="int" parameterType="String">
		SELECT
		count(stay_id) FROM stay_info where host_id = #{hostId};
	</select>

	<insert id="roomInfoInsert" parameterType="com.pro.dto.RoomInfo">
		INSERT INTO room_info
		(stay_id, room_name, content, price, standard_people, maximum_people,
		image1, image2, image3, image4, image5,
		image6, image7, image8, image9,
		image10)
		VALUES(
		#{stayId},#{roomName},#{content},#{price},#{stdPeople},#{maxPeople},
		#{image1},#{image2},#{image3},#{image4},#{image5},#{image6},#{image7},#{image8},#{image9},#{image10}
		);
	</insert>

	<select id="popStaySelect" resultType="com.pro.dto.FilterStayInfo">
		SELECT
		si.stay_id AS stay_id,
		si.stay_name AS stay_name,
		si.road_addr AS road_addr,
		si.image1 AS image1,
		si.latitude AS latitude,
		si.longitude AS longitude,
		MIN(ri.price) AS min_room_price,
		ROUND(AVG(rev.rating), 2) AS avg_rating,
		COUNT(rev.rating) AS
		rating_count
		FROM stay_info si
		JOIN room_info ri ON si.stay_id =
		ri.stay_id
		LEFT JOIN reservation res ON ri.room_id = res.room_id
		LEFT JOIN review_info rev ON res.reservation_id = rev.reservation_id
		GROUP
		BY si.stay_id, si.stay_name, si.road_addr, si.image1
		ORDER BY
		COUNT(res.room_id) DESC;
	</select>

	<select id="filterStaySelect" parameterType="map" resultType="com.pro.dto.FilterStayInfo">
		SELECT
		si.stay_id AS stay_id,
		si.stay_name AS stay_name,
		si.road_addr AS road_addr,
		si.image1 AS image1,
		si.latitude AS latitude,
		si.longitude AS longitude,
		MIN(ri.price) AS min_room_price,
		ROUND(AVG(rev.rating), 2) AS avg_rating,
		count(rev.rating) AS rating_count
		FROM stay_info si
		JOIN
		room_info ri ON si.stay_id = ri.stay_id
		LEFT JOIN reservation res ON
		ri.room_id = res.room_id
		LEFT JOIN review_info rev ON
		res.reservation_id = rev.reservation_id
		<where>
			<if test="parking != null">
				AND si.parking = #{parking}
			</if>
			<if test="wireless_internet != null">
				AND si.wireless_internet = #{wireless_internet}
			</if>
			<if test="tub != null">
				AND si.tub = #{tub}
			</if>
			<if test="washing_machine != null">
				AND si.washing_machine = #{washing_machine}
			</if>
			<if test="drying_machine != null">
				AND si.drying_machine = #{drying_machine}
			</if>
			<if test="air_conditioner != null">
				AND si.air_conditioner = #{air_conditioner}
			</if>
			<if test="fan != null">
				AND si.fan = #{fan}
			</if>
			<if test="heating_system != null">
				AND si.heating_system = #{heating_system}
			</if>
			<if test="pool != null">
				AND si.pool = #{pool}
			</if>
			<if test="arcade_game != null">
				AND si.arcade_game = #{arcade_game}
			</if>
			<if test="gym != null">
				AND si.gym = #{gym}
			</if>
			<if test="board_game != null">
				AND si.board_game = #{board_game}
			</if>
			<if test="barbecue_tool != null">
				AND si.barbecue_tool = #{barbecue_tool}
			</if>
			<if test="basic_cookware != null">
				AND si.basic_cookware = #{basic_cookware}
			</if>
			<if test="breakfast != null">
				AND si.breakfast = #{breakfast}
			</if>
			<if test="clean_service != null">
				AND si.clean_service = #{clean_service}
			</if>
			<if test="luggage_storage != null">
				AND si.luggage_storage = #{luggage_storage}
			</if>
		</where>
		GROUP BY si.stay_id, si.stay_name, si.road_addr, si.image1
		HAVING
		min_room_price BETWEEN #{minPrice} AND #{maxPrice}
		AND
		ROUND(AVG(rev.rating), 2) >= #{rating}
		ORDER BY
		min_room_price ASC,
		avg_rating DESC
		;
	</select>

	<!-- <select id="detailStayList" resultType="com.pro.dto.stayInfo" parameterType="int">
		SELECT
		si.stay_name,si.content,si.road_addr,si.latitude,si.longitude,si.host_phone,si.image1,si.image2,si.image3,si.image4,si.image5,count(rev.rating) AS rating_count,
		CASE WHEN tub = 'yes' THEN 'tub' END as tub,
		CASE WHEN bath_supplies = 'yes' THEN 'bath_supplies' END as bath_supplies,
		CASE WHEN hair_dryer = 'yes' THEN 'hair_dryer' END as hair_dryer,
		CASE WHEN towel = 'yes' THEN 'towel' END as towel,
		CASE WHEN bedding = 'yes' THEN 'bedding' END as bedding,
		CASE WHEN washing_machine = 'yes' THEN 'washing_machine' END as washing_machine,
		CASE WHEN drying_machine = 'yes' THEN 'drying_machine' END as drying_machine,
		CASE WHEN pool = 'yes' THEN 'pool' END as pool,
		CASE WHEN arcade_game = 'yes' THEN 'arcade_game' END as arcade_game,
		CASE WHEN gym = 'yes' THEN 'gym' END as gym,
		CASE WHEN tv = 'yes' THEN 'tv' END as tv,
		CASE WHEN board_game = 'yes' THEN 'board_game' END as board_game,
		CASE WHEN air_conditioner = 'yes' THEN 'air_conditioner' END as air_conditioner,
		CASE WHEN fan = 'yes'
		THEN 'fan' END as fan,
		CASE WHEN heating_system = 'yes' THEN 'heating_system' END as heating_system,
		CASE WHEN carbon_monoxide_alarm = 'yes' THEN 'carbon_monoxide_alarm' END as carbon_monoxide_alarm,
		CASE WHEN fire_extinguisher = 'yes' THEN 'fire_extinguisher' END as fire_extinguisher,
		CASE WHEN aid_kit = 'yes' THEN 'aid_kit' END as aid_kit,
		CASE WHEN fire_alarm = 'yes' THEN 'fire_alarm' END as fire_alarm,
		CASE WHEN workspace = 'yes' THEN 'workspace' END as workspace,
		CASE WHEN wireless_internet = 'yes' THEN 'wireless_internet' END as wireless_internet,
		CASE WHEN barbecue_tool = 'yes' THEN 'barbecue_tool' END as barbecue_tool,
		CASE WHEN basic_cookware = 'yes' THEN 'basic_cookware' END as basic_cookware,
		CASE WHEN dining_table = 'yes' THEN 'dining_table' END as dining_table,
		CASE WHEN cutlery = 'yes' THEN 'cutlery' END as cutlery,
		CASE WHEN refrigerator = 'yes' THEN 'refrigerator' END as refrigerator,
		CASE WHEN microwave = 'yes' THEN 'microwave' END as microwave,
		CASE WHEN electric_rice_cooker =
		'yes' THEN 'electric_rice_cooker' END as electric_rice_cooker,
		CASE WHEN gas_stove_or_induction = 'yes' THEN 'gas_stove_or_induction' END as gas_stove_or_induction,
		CASE WHEN electric_vehicle_charging_facilities = 'yes' THEN 'electric_vehicle_charging_facilities' END as electric_vehicle_charging_facilities,
		CASE WHEN parking = 'yes' THEN 'parking' END as parking,
		CASE WHEN breakfast = 'yes' THEN 'breakfast' END as breakfast,
		CASE WHEN clean_service = 'yes' THEN 'clean_service' END as clean_service,
		CASE WHEN luggage_storage = 'yes' THEN 'luggage_storage' END as
		luggage_storage
		FROM
		stay_info si
        JOIN room_info ri ON si.stay_id =
		ri.stay_id
		LEFT JOIN reservation res ON ri.room_id = res.room_id
		LEFT JOIN review_info rev ON res.reservation_id = rev.reservation_id
		WHERE si.stay_id = #{stay_id};
	</select> -->

	<select id="reviewList" resultType="com.pro.dto.RoomInfo" parameterType="int">
		SELECT ri.room_name, revi.review_title, revi.review_content,ri.room_id, revi.rating
		FROM review_info revi
		JOIN reservation res ON revi.reservation_id = res.reservation_id
		JOIN room_info ri ON res.room_id = ri.room_id
		JOIN stay_info si ON ri.stay_id = si.stay_id
		WHERE si.stay_id = #{stay_id};
	</select>
</mapper>